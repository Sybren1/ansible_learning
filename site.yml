---

- hosts: all
  become: true
  pre_tasks:

  - name: install updates (Ubuntu)
    tags: always
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

- hosts: workstation
  become: true
  tasks:

  - name: isntall unzip
    package:
      name: unzip

#Example to donwload and unzip a program to a target machine
  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.0.10/terraform_1.0.10_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root

- hosts: web_servers
  become: true
  tasks:

#Example to installing packages to a machine
  - name: install apache package and php package
    tags: apache,apache2,ubuntu
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution == "Ubuntu"

#Example to start or stop a service of a target machine
  - name: start apache service (Ubuntu)
    tags: apache,apache2,ubuntu
    serivce:
      name: apache2
      state: started
      enabled: yes
    when: ansible_distribution == "Ubuntu"

#Example to change a line within a file or config
  - name: changing Timeout in apache2.conf
    tags: apache,ubuntu,apache2
    lineinfile:
      path: /etc/apache2/apache2.conf
      regexp: '^Timeout'
      line: Timeout 60
    when: ansible_distribution == "Ubuntu"
    register: apache2

#Restarting service apache2 when a change has happend
  - name: restarting apache2
    tags: apache,apache2,ubuntu
    service:
      name: apache2
      state: restarted
    when: apache2.changed

#Example to copy a file to a specified place on a target machine
  - name: copy default html file for site
    tags: apache,apache2,httpd,site
    copy:
      src: mysite.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

- hosts: db_servers
  become: true
  tasks:

  - name: install mariadb package (Ubuntu)
    tags: mariadb, db, ubuntu
    apt:
      name: mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"

- hosts: file_server
  become: true
  tasks:

  - name: install samba package
    tags: samba
    package:
      name: samba
      state: latest
